name: GitLabSync

on:
  push:
  delete:

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Auto-create GitLab Repo & Sync

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history for all branches

      - name: Set environment variables
        id: vars
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}"  # Debug

      - name: Create GitLab repo if not exists
        env:
          GITLAB_TOKEN: ${{ secrets.TARGET_TOKEN }}
          GITLAB_USERNAME: ${{ secrets.TARGET_USERNAME }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          echo "Checking if GitLab repo '${REPO_NAME}' exists..."
          PROJECT_URL_ENCODED=$(printf "%s%%2F%s" "$GITLAB_USERNAME" "$REPO_NAME")

          EXISTS=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
            "https://gitlab.com/api/v4/projects/${PROJECT_URL_ENCODED}" \
            | jq -r '.id // empty')

          if [ -z "$EXISTS" ]; then
            echo "Creating repo '$REPO_NAME' under user '$GITLAB_USERNAME'..."
            NAMESPACE_ID=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
              "https://gitlab.com/api/v4/namespaces?search=$GITLAB_USERNAME" \
              | jq -r '.[0].id')

            curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
              --data "name=$REPO_NAME&namespace_id=$NAMESPACE_ID" \
              https://gitlab.com/api/v4/projects > /dev/null

            echo "✅ Created GitLab repo: $REPO_NAME"
          else
            echo "✅ GitLab repo '$REPO_NAME' already exists"
          fi

      - name: Fetch and create all GitHub branches locally
        run: |
          git fetch origin "+refs/heads/*:refs/remotes/origin/*"
          for branch in $(git for-each-ref --format='%(refname:short)' refs/remotes/origin/ | grep -v HEAD); do
            LOCAL_BRANCH="${branch#origin/}"
            git checkout -B "$LOCAL_BRANCH" "origin/$LOCAL_BRANCH"
          done

      - name: Push all branches and tags to GitLab
        env:
          GITLAB_TOKEN: ${{ secrets.TARGET_TOKEN }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          git remote add gitlab https://oauth2:${GITLAB_TOKEN}@gitlab.com/${{ secrets.TARGET_USERNAME }}/${REPO_NAME}.git
          git push gitlab --all
          git push gitlab --tags
